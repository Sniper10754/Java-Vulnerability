package JVulnerability;

import JVulnerability.Dipendences.*;
import java.util.ArrayList;

public class ThreadPoolTCPScanner extends Thread {

    private final ThreadPoolRunner runner;
    boolean printout;

    public ThreadPoolTCPScanner(String target, int start, int finish, int timeout, boolean printout) {
        runner = new ThreadPoolRunner(target, start, finish, timeout);
        this.printout = printout;
    }

    @Override
    public void run() {
        // Here's the difficult part, i use a pointer
        runner.start();

        if (printout) {
            int pointer = 0;
            int port;
            StringBuilder str = new StringBuilder();
            while (runner.isAlive()) {
                WorkerThread[] threadPool = runner.ThreadPool;
                for (WorkerThread workerThread : threadPool) {
                    if (pointer < runner.ThreadPool.length) {
                        if ((port = workerThread.getCurrentPortScan()) != 0) {
                            str.append(" ").append(workerThread.getName()).append(": ").append(port);
                        } else
                            str.append(" ").append(workerThread.getName()).append(": Finished");
                        try {
                            Thread.sleep(runner.ThreadPool[0].getTimeout() / 2);
                        } catch (InterruptedException ignored) {
                        }
                        pointer++;
                    } else {
                        System.out.print("\n" + str);
                        str = new StringBuilder();
                        pointer = 0;
                    }
                }
                System.out.println("\n");
            }
        }
    }

    public ArrayList<Integer> getResults() {
        return runner.getResults();
    }
}
