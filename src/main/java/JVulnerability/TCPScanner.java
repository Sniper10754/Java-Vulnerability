package JVulnerability;

import java.io.IOException;
import java.net.*;
import java.util.*;

public class TCPScanner {
    protected int currentScanningPort;
    private final String address;
    private final ArrayList<Integer> openPorts = new ArrayList<>();


    public TCPScanner(String address) {
        this.address = address;
    }


    public boolean scanPort(int port, int timeout) {
        InetSocketAddress a = new InetSocketAddress(address, port);
        try {
            Socket s = new Socket();
            s.connect(a, timeout);
            s.close();
            return true;
        } catch (IOException ignored) {
            return false;
        }
    }

    public void startScan(int start, int finish, int timeout, boolean printout) {

        /*
         * Ideal timeout is 200 with a slow network.
         * Lower amounts can affect the scan. (in negative way)
         */

        InputMismatchException IME = new InputMismatchException("the finish port is more than the start.");

        if (finish < start) {
            throw IME;
        } else {
            openPorts.clear();
            if (printout) {System.out.print("\n");}

            for (int port=start; port<finish + 1; port++) {
                currentScanningPort = port;
                try {
                    Socket s = new Socket();
                    s.connect(new InetSocketAddress(address, port), timeout);
                    s.close();

                    if (printout) { System.out.print("[" + port + "] Open. \r");}

                    openPorts.add(port);
                } catch (IOException ignored) {
                    if (printout) { System.out.print("[" + port + "] Closed. \r");}
                }

            }
            if (printout) {System.out.println("\n");}
        }
    }

    public String getAddress() {
        return address;
    }

    public ArrayList<Integer> getOpenPorts() {
        return openPorts;
    }
}
